{"numFailedTestSuites":1,"numFailedTests":5,"numPassedTestSuites":69,"numPassedTests":470,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":70,"numTotalTests":475,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1569331529548,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for size","location":null,"status":"passed","title":"Should set the correct className for size"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for spaced","location":null,"status":"passed","title":"Should set the correct className for spaced"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for autoHeight","location":null,"status":"passed","title":"Should set the correct className for autoHeight"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for alignTop","location":null,"status":"passed","title":"Should set the correct className for alignTop"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should correctly render the left controls","location":null,"status":"passed","title":"Should correctly render the left controls"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should correctly render the center controls","location":null,"status":"passed","title":"Should correctly render the center controls"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should correctly render the right controls","location":null,"status":"passed","title":"Should correctly render the right controls"}],"endTime":1569331544541,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Toolbar\\Toolbar.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should pass on the name","location":null,"status":"passed","title":"Should pass on the name"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set the placeholder value","location":null,"status":"passed","title":"Should be able to set the placeholder value"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set the rows for the textarea","location":null,"status":"passed","title":"Should be able to set the rows for the textarea"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should set the correct classnames for the `height`-prop","location":null,"status":"passed","title":"Should set the correct classnames for the `height`-prop"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should set the correct classnames for the `width`-prop","location":null,"status":"passed","title":"Should set the correct classnames for the `width`-prop"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should call the onChange handler when the textArea changes","location":null,"status":"passed","title":"Should call the onChange handler when the textArea changes"}],"endTime":1569331544571,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\TextArea\\TextArea.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `id`","location":null,"status":"passed","title":"Should correctly pass on `id`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `data`","location":null,"status":"passed","title":"Should correctly pass on `data`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `placeholder`","location":null,"status":"passed","title":"Should correctly pass on `placeholder`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `lang`","location":null,"status":"passed","title":"Should correctly pass on `lang`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `buttons`","location":null,"status":"passed","title":"Should correctly pass on `buttons`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `semantic`","location":null,"status":"passed","title":"Should correctly pass on `semantic`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `resetCss`","location":null,"status":"passed","title":"Should correctly pass on `resetCss`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `autogrow`","location":null,"status":"passed","title":"Should correctly pass on `autogrow`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `disabled`","location":null,"status":"passed","title":"Should correctly pass on `disabled`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `removeformatPasted`","location":null,"status":"passed","title":"Should correctly pass on `removeformatPasted`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `shouldUseSvgIcons`","location":null,"status":"passed","title":"Should correctly pass on `shouldUseSvgIcons`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `shouldInjectSvgIcons`","location":null,"status":"passed","title":"Should correctly pass on `shouldInjectSvgIcons`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `svgIconsPath`","location":null,"status":"passed","title":"Should correctly pass on `svgIconsPath`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `btnsDef`","location":null,"status":"passed","title":"Should correctly pass on `btnsDef`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `plugins`","location":null,"status":"passed","title":"Should correctly pass on `plugins`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onFocus`","location":null,"status":"passed","title":"Should correctly pass on `onFocus`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly trigger `onBlur`","location":null,"status":"passed","title":"Should correctly trigger `onBlur`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onInit`","location":null,"status":"passed","title":"Should correctly pass on `onInit`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onResize`","location":null,"status":"passed","title":"Should correctly pass on `onResize`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onPaste`","location":null,"status":"passed","title":"Should correctly pass on `onPaste`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onOpenFullScreen`","location":null,"status":"passed","title":"Should correctly pass on `onOpenFullScreen`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onCloseFullScreen`","location":null,"status":"passed","title":"Should correctly pass on `onCloseFullScreen`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onClose`","location":null,"status":"passed","title":"Should correctly pass on `onClose`"}],"endTime":1569331544584,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\WYSIWYG\\WYSIWYG.test.tsx","startTime":1569331533963,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when orientation is passed","location":null,"status":"passed","title":"Should set the correct className when orientation is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when center is passed","location":null,"status":"passed","title":"Should set the correct className when center is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when orientation and center are passed","location":null,"status":"passed","title":"Should set the correct className when orientation and center are passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when justify is passed","location":null,"status":"passed","title":"Should set the correct className when justify is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when wrapped is passed","location":null,"status":"passed","title":"Should set the correct className when wrapped is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when spaced is passed (boolean)","location":null,"status":"passed","title":"Should set the correct className when spaced is passed (boolean)"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when spaced is passed (wide)","location":null,"status":"passed","title":"Should set the correct className when spaced is passed (wide)"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when no spaced is passed","location":null,"status":"passed","title":"Should set the correct className when no spaced is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331546427,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Flex\\Flex.test.tsx","startTime":1569331544820,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render pages equal to the `displayCount`","location":null,"status":"passed","title":"Should render pages equal to the `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render pages equal to the `pageCount` if it is less than the `displayCount`","location":null,"status":"passed","title":"Should render pages equal to the `pageCount` if it is less than the `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the current page in an active state","location":null,"status":"passed","title":"Should render the current page in an active state"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should correctly set the `currentPage`","location":null,"status":"passed","title":"Should correctly set the `currentPage`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render pages padded around the current page based on the `displayCount`","location":null,"status":"passed","title":"Should render pages padded around the current page based on the `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the first x pages when the current page is lower than the (odd) `displayCount`","location":null,"status":"passed","title":"Should render the first x pages when the current page is lower than the (odd) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the first x pages when the current page is lower than the (even) `displayCount`","location":null,"status":"passed","title":"Should render the first x pages when the current page is lower than the (even) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (odd) `displayCount`","location":null,"status":"passed","title":"Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (odd) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (even) `displayCount`","location":null,"status":"passed","title":"Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (even) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should call `onPageChange` when changing pages internally","location":null,"status":"passed","title":"Should call `onPageChange` when changing pages internally"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should not call `onPageChange` when changing page to the current page","location":null,"status":"passed","title":"Should not call `onPageChange` when changing page to the current page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the previous page","location":null,"status":"passed","title":"Should be able to jump to the previous page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the next page","location":null,"status":"passed","title":"Should be able to jump to the next page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the first page","location":null,"status":"passed","title":"Should be able to jump to the first page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the last page","location":null,"status":"passed","title":"Should be able to jump to the last page"}],"endTime":1569331547263,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Pagination\\Pagination.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct aria label","location":null,"status":"passed","title":"Should set the correct aria label"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct size className","location":null,"status":"passed","title":"Should set the correct size className"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct width className when passing block option","location":null,"status":"passed","title":"Should set the correct width className when passing block option"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct type className","location":null,"status":"passed","title":"Should set the correct type className"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render a label","location":null,"status":"passed","title":"Should be able to render a label"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should not to render a label when none is passed","location":null,"status":"passed","title":"Should not to render a label when none is passed"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render a label and an icon","location":null,"status":"passed","title":"Should be able to render a label and an icon"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should get a special className when only an icon is passed","location":null,"status":"passed","title":"Should get a special className when only an icon is passed"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render an arrow at the end of the button","location":null,"status":"passed","title":"Should be able to render an arrow at the end of the button"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should call the `onClick`-handler when clicked","location":null,"status":"passed","title":"Should call the `onClick`-handler when clicked"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should pass on the `disabled`-attribute","location":null,"status":"passed","title":"Should pass on the `disabled`-attribute"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct classNames when `active` is passed","location":null,"status":"passed","title":"Should set the correct classNames when `active` is passed"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should pass on the title attribute","location":null,"status":"passed","title":"Should pass on the title attribute"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should pass on the `active`-prop to the button icon","location":null,"status":"passed","title":"Should pass on the `active`-prop to the button icon"}],"endTime":1569331547264,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Button\\Button.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should correctly render the labels","location":null,"status":"passed","title":"Should correctly render the labels"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render with swatches","location":null,"status":"passed","title":"Should be able to render with swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render without swatches","location":null,"status":"passed","title":"Should be able to render without swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should set the correct className for labels when rendering with swatches","location":null,"status":"passed","title":"Should set the correct className for labels when rendering with swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should set the correct className for labels when rendering without swatches","location":null,"status":"passed","title":"Should set the correct className for labels when rendering without swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should not render a <p class=\"c-label-text\"> nor <p class=\"c-tag__label\"> when tag has no swatches & is not closable","location":null,"status":"passed","title":"Should not render a <p class=\"c-label-text\"> nor <p class=\"c-tag__label\"> when tag has no swatches & is not closable"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render with borders","location":null,"status":"passed","title":"Should be able to render with borders"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render without borders","location":null,"status":"passed","title":"Should be able to render without borders"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render close buttons","location":null,"status":"passed","title":"Should be able to render close buttons"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should call `onTagClosed` when closing a tag","location":null,"status":"passed","title":"Should call `onTagClosed` when closing a tag"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should call `onTagClicked` when clicking a tag","location":null,"status":"passed","title":"Should call `onTagClicked` when clicking a tag"}],"endTime":1569331547304,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\TagList\\TagList.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should set the correct className for every size","location":null,"status":"passed","title":"Should set the correct className for every size"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should set the correct className for scrollable modals","location":null,"status":"passed","title":"Should set the correct className for scrollable modals"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render with a title","location":null,"status":"passed","title":"Should be able to render with a title"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render without a title","location":null,"status":"passed","title":"Should be able to render without a title"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to be rendered invisible","location":null,"status":"passed","title":"Should be able to be rendered invisible"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to be rendered visible ","location":null,"status":"passed","title":"Should be able to be rendered visible "},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not show the backdrop when invisible","location":null,"status":"passed","title":"Should not show the backdrop when invisible"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should show the backdrop when visible","location":null,"status":"passed","title":"Should show the backdrop when visible"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should call the onClose handler when closing the modal","location":null,"status":"passed","title":"Should call the onClose handler when closing the modal"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not call `onClose` when clicking inside the modal ","location":null,"status":"passed","title":"Should not call `onClose` when clicking inside the modal "},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should correctly render the body","location":null,"status":"passed","title":"Should correctly render the body"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render items in the header (right)","location":null,"status":"passed","title":"Should be able to render items in the header (right)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render items in the footer (left)","location":null,"status":"passed","title":"Should be able to render items in the footer (left)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render items in the footer (right)","location":null,"status":"passed","title":"Should be able to render items in the footer (right)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not render the footer when no footer render props are passed","location":null,"status":"passed","title":"Should not render the footer when no footer render props are passed"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not render the left side of the footer when no ModalFooterLeft-slot is passed","location":null,"status":"passed","title":"Should not render the left side of the footer when no ModalFooterLeft-slot is passed"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not render the right side of the footer when no ModalFooterRight-slot is passed","location":null,"status":"passed","title":"Should not render the right side of the footer when no ModalFooterRight-slot is passed"}],"endTime":1569331547388,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Modal\\Modal.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className for the `styled`-prop","location":null,"status":"passed","title":"Should set the correct className for the `styled`-prop"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className for the `bordered`-prop","location":null,"status":"passed","title":"Should set the correct className for the `bordered`-prop"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should be able to render the table head from `columns`","location":null,"status":"passed","title":"Should be able to render the table head from `columns`"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should render a chevron based on `sortColumn` & `sortOrder` when a column is sortable","location":null,"status":"passed","title":"Should render a chevron based on `sortColumn` & `sortOrder` when a column is sortable"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className for a th when col is given","location":null,"status":"passed","title":"Should set the correct className for a th when col is given"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not try to render table head when no `columns` are passed","location":null,"status":"passed","title":"Should not try to render table head when no `columns` are passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should be able to render the table body from `data`","location":null,"status":"passed","title":"Should be able to render the table body from `data`"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not try to render table body when no `data` is passed","location":null,"status":"passed","title":"Should not try to render table body when no `data` is passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should accept a custom `renderCell`-prop for cell-rendering","location":null,"status":"passed","title":"Should accept a custom `renderCell`-prop for cell-rendering"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should correctly set the rowKey for each row","location":null,"status":"passed","title":"Should correctly set the rowKey for each row"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should call `onColumnClick` when a sortable column is clicked","location":null,"status":"passed","title":"Should call `onColumnClick` when a sortable column is clicked"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not call `onColumnClick` when a non-sortable column is clicked","location":null,"status":"passed","title":"Should not call `onColumnClick` when a non-sortable column is clicked"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should render an `emptyStateMessage` when no data is passed","location":null,"status":"passed","title":"Should render an `emptyStateMessage` when no data is passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not render an `emptyStateMessage` when data is passed","location":null,"status":"passed","title":"Should not render an `emptyStateMessage` when data is passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not render an `emptyStateMessage` when it was not passed","location":null,"status":"passed","title":"Should not render an `emptyStateMessage` when it was not passed"}],"endTime":1569331547422,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Table\\Table.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should render correctly with `isOpen = false`","location":null,"status":"passed","title":"Should render correctly with `isOpen = false`"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Shouldrender correctly with `isOpen = true`","location":null,"status":"passed","title":"Shouldrender correctly with `isOpen = true`"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should call `onOpen` when clicking the button (and `isOpen = false`)","location":null,"status":"passed","title":"Should call `onOpen` when clicking the button (and `isOpen = false`)"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should call `onClose` when clicking the button (and `isOpen = true`)","location":null,"status":"passed","title":"Should call `onClose` when clicking the button (and `isOpen = true`)"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should set the correct className for button","location":null,"status":"passed","title":"Should set the correct className for button"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should correctly pass `label`","location":null,"status":"passed","title":"Should correctly pass `label`"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should correctly render slots","location":null,"status":"passed","title":"Should correctly render slots"}],"endTime":1569331547683,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Dropdown\\Dropdown.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should call the onChange handler when the input changes","location":null,"status":"passed","title":"Should call the onChange handler when the input changes"}],"endTime":1569331548514,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\TagsInput\\TagsInput.test.tsx","startTime":1569331544801,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className when icon is passed","location":null,"status":"passed","title":"Should set the correct className when icon is passed"}],"endTime":1569331549656,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\MetaDataItem\\MetaDataItem.test.tsx","startTime":1569331547301,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the placeholder value","location":null,"status":"passed","title":"Should be able to set the placeholder value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the type value","location":null,"status":"passed","title":"Should be able to set the type value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render with an icon","location":null,"status":"passed","title":"Should be able to render with an icon"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should call the onChange handler when the input changes","location":null,"status":"passed","title":"Should call the onChange handler when the input changes"}],"endTime":1569331549842,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\TextInput\\TextInput.test.tsx","startTime":1569331547424,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the video correctly","location":null,"status":"passed","title":"Should render the video correctly"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the title link correctly","location":null,"status":"passed","title":"Should render the title link correctly"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the text correctly","location":null,"status":"passed","title":"Should render the text correctly"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331549888,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockVideoTitleTextButton\\BlockVideoTitleTextButton.test.tsx","startTime":1569331546448,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render the correct number of menu items","location":null,"status":"passed","title":"Should render the correct number of menu items"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render the correct icons","location":null,"status":"passed","title":"Should render the correct icons"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render no results label if provided","location":null,"status":"passed","title":"Should render no results label if provided"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should call onClick when item is clicked","location":null,"status":"passed","title":"Should call onClick when item is clicked"}],"endTime":1569331550013,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\MenuSearchResult\\MenuSearchResult.test.tsx","startTime":1569331547459,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should render the image correctly","location":null,"status":"passed","title":"Should render the image correctly"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should render the text correctly","location":null,"status":"passed","title":"Should render the text correctly"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should trigger handler when button is clicked","location":null,"status":"passed","title":"Should trigger handler when button is clicked"}],"endTime":1569331550041,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockImageTitleTextButton\\BlockImageTitleTextButton.test.tsx","startTime":1569331547300,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className with each category","location":null,"status":"passed","title":"Should set the correct className with each category"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className when spaced is passed","location":null,"status":"passed","title":"Should set the correct className when spaced is passed"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331550172,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\MetaData\\MetaData.test.tsx","startTime":1569331547723,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should show the correct message","location":null,"status":"passed","title":"should show the correct message"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should show an icon depending on the type option","location":null,"status":"passed","title":"should show an icon depending on the type option"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should set the correct className when setting option dark = true","location":null,"status":"passed","title":"should set the correct className when setting option dark = true"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should show a spinner when the correct type is passed","location":null,"status":"passed","title":"should show a spinner when the correct type is passed"}],"endTime":1569331551161,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Alert\\Alert.test.tsx","startTime":1569331547339,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ButtonGroup />"],"failureMessages":[],"fullName":"<ButtonGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ButtonGroup />"],"failureMessages":[],"fullName":"<ButtonGroup /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331551402,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ButtonGroup\\ButtonGroup.test.tsx","startTime":1569331544797,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should set the correct className for each category","location":null,"status":"passed","title":"Should set the correct className for each category"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should render image if src is correctly passed","location":null,"status":"passed","title":"Should render image if src is correctly passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should render placeholder if no src is passed","location":null,"status":"passed","title":"Should render placeholder if no src is passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should correctly set alt if it was passed","location":null,"status":"passed","title":"Should correctly set alt if it was passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should render meta if it was passed","location":null,"status":"passed","title":"Should render meta if it was passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should not render meta if it was not passed","location":null,"status":"passed","title":"Should not render meta if it was not passed"}],"endTime":1569331551544,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Thumbnail\\Thumbnail.test.tsx","startTime":1569331548545,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should set the correct className when border is passed","location":null,"status":"passed","title":"Should set the correct className when border is passed"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should correctly render `Tab`-components as children","location":null,"status":"passed","title":"Should correctly render `Tab`-components as children"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should trigger onClick when clicking a tab","location":null,"status":"passed","title":"Should trigger onClick when clicking a tab"}],"endTime":1569331552044,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Tabs\\Tabs.test.tsx","startTime":1569331549688,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct collapsed height","location":null,"status":"passed","title":"Should set the correct collapsed height"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should render with custom expand/collapse labels","location":null,"status":"passed","title":"Should render with custom expand/collapse labels"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should render expanded state if defaultExpanded is true","location":null,"status":"passed","title":"Should render expanded state if defaultExpanded is true"}],"endTime":1569331552262,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ExpandableContainer\\ExpandableContainer.test.tsx","startTime":1569331549919,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should set the correct className when in spacious mode","location":null,"status":"passed","title":"Should set the correct className when in spacious mode"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should render the body correctly","location":null,"status":"passed","title":"Should render the body correctly"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should be able to render an icon","location":null,"status":"passed","title":"Should be able to render an icon"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331552288,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Blankslate\\Blankslate.test.tsx","startTime":1569331550045,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to set a placeholder value","location":null,"status":"passed","title":"Should be able to set a placeholder value"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should call the onChange handler when the input changes","location":null,"status":"passed","title":"Should call the onChange handler when the input changes"}],"endTime":1569331552331,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DatePicker\\DatePicker.test.tsx","startTime":1569331550069,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should set the correct className for each category","location":null,"status":"passed","title":"Should set the correct className for each category"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should set the correct className for each orientation","location":null,"status":"passed","title":"Should set the correct className for each orientation"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should render thumbnail when slot is passed","location":null,"status":"passed","title":"Should render thumbnail when slot is passed"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should render metaData when slot is passed","location":null,"status":"passed","title":"Should render metaData when slot is passed"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should pass `href` property to title & thumbnail","location":null,"status":"passed","title":"Should pass `href` property to title & thumbnail"}],"endTime":1569331552338,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\MediaCard\\MediaCard.test.tsx","startTime":1569331549873,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> should correctly pass a custom className","location":null,"status":"passed","title":"should correctly pass a custom className"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set aria label","location":null,"status":"passed","title":"Should set aria label"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set title tooltip","location":null,"status":"passed","title":"Should set title tooltip"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set the normal version of the icon when not `active`","location":null,"status":"passed","title":"Should set the normal version of the icon when not `active`"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set the filled version of the icon when `active`","location":null,"status":"passed","title":"Should set the filled version of the icon when `active`"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should call the `onClick`-handler when clicked","location":null,"status":"passed","title":"Should call the `onClick`-handler when clicked"}],"endTime":1569331552598,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ToggleButton\\ToggleButton.test.tsx","startTime":1569331550201,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should only show 3 visible avatars if more are given","location":null,"status":"passed","title":"should only show 3 visible avatars if more are given"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should show a button with the amount of hidden avatars if more than 3 are given","location":null,"status":"passed","title":"should show a button with the amount of hidden avatars if more than 3 are given"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should show the hidden avatars when isOpen prop equals true","location":null,"status":"passed","title":"should show the hidden avatars when isOpen prop equals true"}],"endTime":1569331552893,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\AvatarList\\AvatarList.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render Thumbnail component","location":null,"status":"passed","title":"Should render Thumbnail component"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render a SearchResultTitle-slot","location":null,"status":"passed","title":"Should be able to render a SearchResultTitle-slot"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render a SearchResultSubtitle-slot","location":null,"status":"passed","title":"Should be able to render a SearchResultSubtitle-slot"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render a SearchResultThumbnail-slot","location":null,"status":"passed","title":"Should be able to render a SearchResultThumbnail-slot"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should call `onToggle` when clicking bookmark","location":null,"status":"passed","title":"Should call `onToggle` when clicking bookmark"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `type` correctly","location":null,"status":"passed","title":"Should render `type` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `date` correctly","location":null,"status":"passed","title":"Should render `date` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `viewCount` correctly","location":null,"status":"passed","title":"Should render `viewCount` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `bookmarkCount` correctly","location":null,"status":"passed","title":"Should render `bookmarkCount` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `description` correctly","location":null,"status":"passed","title":"Should render `description` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `duration` correctly","location":null,"status":"passed","title":"Should render `duration` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `numberOfItems` correctly","location":null,"status":"passed","title":"Should render `numberOfItems` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `tags` correctly","location":null,"status":"passed","title":"Should render `tags` correctly"}],"endTime":1569331553103,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\SearchResult\\SearchResult.test.tsx","startTime":1569331533962,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render when a known icon is passed","location":null,"status":"passed","title":"Should render when a known icon is passed"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render slash icon when an unknown icon name is passed","location":null,"status":"passed","title":"Should render slash icon when an unknown icon name is passed"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render icon when name was passed as PascalCase","location":null,"status":"passed","title":"Should render icon when name was passed as PascalCase"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render icon when name was passed as kebab-case","location":null,"status":"passed","title":"Should render icon when name was passed as kebab-case"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly pass a custom className","location":null,"status":"passed","title":"Should correctly pass a custom className"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the className without type","location":null,"status":"passed","title":"Should correctly set the className without type"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the className with type","location":null,"status":"passed","title":"Should correctly set the className with type"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the subtle class when the subtle option is true","location":null,"status":"passed","title":"Should correctly set the subtle class when the subtle option is true"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the sizing className","location":null,"status":"passed","title":"Should correctly set the sizing className"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the className when active","location":null,"status":"passed","title":"Should correctly set the className when active"}],"endTime":1569331553870,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Icon\\Icon.test.tsx","startTime":1569331551195,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should set the correct className when icon is passed","location":null,"status":"passed","title":"Should set the correct className when icon is passed"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should set the correct className when passing `active`","location":null,"status":"passed","title":"Should set the correct className when passing `active`"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should render `label` correctly","location":null,"status":"passed","title":"Should render `label` correctly"}],"endTime":1569331553976,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Tab\\Tab.test.tsx","startTime":1569331551431,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render the correct number of menu items","location":null,"status":"passed","title":"Should render the correct number of menu items"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render icons if provided","location":null,"status":"passed","title":"Should render icons if provided"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render no results label if provided","location":null,"status":"passed","title":"Should render no results label if provided"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render the correct number of dividers","location":null,"status":"passed","title":"Should render the correct number of dividers"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render using custom render function","location":null,"status":"passed","title":"Should render using custom render function"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should call onClick when item is clicked","location":null,"status":"passed","title":"Should call onClick when item is clicked"}],"endTime":1569331554028,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Menu\\Menu.test.tsx","startTime":1569331551583,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockLinks />"],"failureMessages":[],"fullName":"<BlockLinks /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockLinks />"],"failureMessages":[],"fullName":"<BlockLinks /> Should render the links correctly","location":null,"status":"passed","title":"Should render the links correctly"},{"ancestorTitles":["<BlockLinks />"],"failureMessages":[],"fullName":"<BlockLinks /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331554293,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockLinks\\BlockLinks.test.tsx","startTime":1569331552370,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should render a label when it is passed","location":null,"status":"passed","title":"Should render a label when it is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should not render a label when none is passed","location":null,"status":"passed","title":"Should not render a label when none is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should set className and render an error when it is passed","location":null,"status":"passed","title":"Should set className and render an error when it is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should set className and render multiple errors when they are passed","location":null,"status":"passed","title":"Should set className and render multiple errors when they are passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should add correct inlineMode class","location":null,"status":"passed","title":"Should add correct inlineMode class"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should not set className and not render an error when none is passed","location":null,"status":"passed","title":"Should not set className and not render an error when none is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331554330,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Form\\FormGroup.test.tsx","startTime":1569331552289,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should display the tooltip trigger","location":null,"status":"passed","title":"should display the tooltip trigger"},{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should set the correct placement className","location":null,"status":"passed","title":"should set the correct placement className"},{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should show the tooltip when hovered","location":null,"status":"passed","title":"should show the tooltip when hovered"}],"endTime":1569331554419,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Tooltip\\Tooltip.test.tsx","startTime":1569331552085,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockText />"],"failureMessages":[],"fullName":"<BlockText /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockText />"],"failureMessages":[],"fullName":"<BlockText /> Should render the markdown correctly","location":null,"status":"passed","title":"Should render the markdown correctly"},{"ancestorTitles":["<BlockText />"],"failureMessages":[],"fullName":"<BlockText /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331554476,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockText\\BlockText.test.tsx","startTime":1569331552322,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"}],"endTime":1569331554493,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\MultiRange\\MultiRange.test.tsx","startTime":1569331552367,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["useDeselectEvent"],"failureMessages":[],"fullName":"useDeselectEvent Should call `onDeselect` when selecting a radio button with the same `name` and a different `value`","location":null,"status":"passed","title":"Should call `onDeselect` when selecting a radio button with the same `name` and a different `value`"},{"ancestorTitles":["useDeselectEvent"],"failureMessages":[],"fullName":"useDeselectEvent Should not call `onDeselect` when selecting the current radio button","location":null,"status":"passed","title":"Should not call `onDeselect` when selecting the current radio button"},{"ancestorTitles":["useDeselectEvent"],"failureMessages":[],"fullName":"useDeselectEvent Should not call `onDeselect` when selecting a radio button with a different `name`","location":null,"status":"passed","title":"Should not call `onDeselect` when selecting a radio button with a different `name`"}],"endTime":1569331554620,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\hooks\\useDeselectEvent.test.tsx","startTime":1569331552625,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should correctly render the given options","location":null,"status":"passed","title":"Should correctly render the given options"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should call the onChange handler when the select option changes","location":null,"status":"passed","title":"Should call the onChange handler when the select option changes"}],"endTime":1569331555087,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Select\\Select.test.tsx","startTime":1569331552930,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should render the thumbnail slot correctly","location":null,"status":"passed","title":"Should render the thumbnail slot correctly"},{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should render the text slot correctly","location":null,"status":"passed","title":"Should render the text slot correctly"},{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331555394,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockTitleImageText\\BlockTitleImageText.test.tsx","startTime":1569331553138,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className when margin is passed (string)","location":null,"status":"passed","title":"Should set the correct className when margin is passed (string)"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className when margin is passed (array)","location":null,"status":"passed","title":"Should set the correct className when margin is passed (array)"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className when multiple margins are passed","location":null,"status":"passed","title":"Should set the correct className when multiple margins are passed"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331555868,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Spacer\\Spacer.test.tsx","startTime":1569331554003,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should render the subtitle correctly","location":null,"status":"passed","title":"Should render the subtitle correctly"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should not render the title if none is passed","location":null,"status":"passed","title":"Should not render the title if none is passed"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should not render the subtitle if none is passed","location":null,"status":"passed","title":"Should not render the subtitle if none is passed"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should render the subtitle correctly","location":null,"status":"passed","title":"Should render the subtitle correctly"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331555963,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockIntro\\BlockIntro.test.tsx","startTime":1569331553901,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should render the quote text correctly","location":null,"status":"passed","title":"Should render the quote text correctly"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should render the avatar correctly","location":null,"status":"passed","title":"Should render the avatar correctly"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should render the author name correctly","location":null,"status":"passed","title":"Should render the author name correctly"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331556043,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockQuote\\BlockQuote.test.tsx","startTime":1569331554057,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classNames when in horizontal mode","location":null,"status":"passed","title":"Should set the correct classNames when in horizontal mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct custom classNames","location":null,"status":"passed","title":"Should set the correct custom classNames"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classNames when passing `size` and no mode is passed","location":null,"status":"passed","title":"Should set the correct classNames when passing `size` and no mode is passed"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classNames when passing `size` in horizontal mode","location":null,"status":"passed","title":"Should set the correct classNames when passing `size` in horizontal mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classNames when in vertical mode","location":null,"status":"passed","title":"Should set the correct classNames when in vertical mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classNames when passing `size` in vertical mode","location":null,"status":"passed","title":"Should set the correct classNames when passing `size` in vertical mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to have an `alt` background","location":null,"status":"passed","title":"Should be able to have an `alt` background"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to have an `inverse` background","location":null,"status":"passed","title":"Should be able to have an `inverse` background"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to be rendered with a bottom border","location":null,"status":"passed","title":"Should be able to be rendered with a bottom border"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331556186,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Container\\Container.test.tsx","startTime":1569331554357,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render with id correctly set","location":null,"status":"passed","title":"Should be able to render with id correctly set"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render with name correctly set","location":null,"status":"passed","title":"Should be able to render with name correctly set"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render with label correctly set","location":null,"status":"passed","title":"Should be able to render with label correctly set"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render without an id","location":null,"status":"passed","title":"Should be able to render without an id"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should set the defaultChecked-prop as the initial state","location":null,"status":"passed","title":"Should set the defaultChecked-prop as the initial state"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should have a default value of false for the checked-state","location":null,"status":"passed","title":"Should have a default value of false for the checked-state"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should call `onChange` when toggling radio button","location":null,"status":"passed","title":"Should call `onChange` when toggling radio button"}],"endTime":1569331556267,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\RadioButton\\RadioButton.test.tsx","startTime":1569331554322,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should correctly render `checked state`","location":null,"status":"passed","title":"Should correctly render `checked state`"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should correctly render `id`","location":null,"status":"passed","title":"Should correctly render `id`"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should be able to render without `id`","location":null,"status":"passed","title":"Should be able to render without `id`"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should call `onChange` when toggling toggle","location":null,"status":"passed","title":"Should call `onChange` when toggling toggle"}],"endTime":1569331556329,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Toggle\\Toggle.test.tsx","startTime":1569331554448,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should call onPressDown when pressing target key","location":null,"status":"passed","title":"Should call onPressDown when pressing target key"},{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should call onPressUp when releasing target key","location":null,"status":"passed","title":"Should call onPressUp when releasing target key"},{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should not call onPressDown when pressing a key that is not the target key","location":null,"status":"passed","title":"Should not call onPressDown when pressing a key that is not the target key"},{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should not call onPressUp when releasing a key that is not the target key","location":null,"status":"passed","title":"Should not call onPressUp when releasing a key that is not the target key"}],"endTime":1569331556364,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\hooks\\useKeypress.test.tsx","startTime":1569331554508,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly render the name","location":null,"status":"passed","title":"Should correctly render the name"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly render the title","location":null,"status":"passed","title":"Should correctly render the title"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly render a combination of the name & title","location":null,"status":"passed","title":"Should correctly render a combination of the name & title"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should render only the icon when no name or title was passed","location":null,"status":"passed","title":"Should render only the icon when no name or title was passed"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly pass the necessary props to <AvatarIcon />","location":null,"status":"passed","title":"Should correctly pass the necessary props to <AvatarIcon />"}],"endTime":1569331556406,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Avatar\\Avatar.test.tsx","startTime":1569331554522,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockSubtitle />"],"failureMessages":[],"fullName":"<BlockSubtitle /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockSubtitle />"],"failureMessages":[],"fullName":"<BlockSubtitle /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockSubtitle />"],"failureMessages":[],"fullName":"<BlockSubtitle /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331556527,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockSubtitle\\BlockSubtitle.test.tsx","startTime":1569331554649,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should set the correct inline className","location":null,"status":"passed","title":"Should set the correct inline className"},{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331557169,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\RadioButtonGroup\\RadioButtonGroup.test.tsx","startTime":1569331555114,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockVideo />"],"failureMessages":[],"fullName":"<BlockVideo /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockVideo />"],"failureMessages":[],"fullName":"<BlockVideo /> Should render the video correctly","location":null,"status":"passed","title":"Should render the video correctly"},{"ancestorTitles":["<BlockVideo />"],"failureMessages":[],"fullName":"<BlockVideo /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331557444,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockVideo\\BlockVideo.test.tsx","startTime":1569331555427,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should set the correct className when passing inline option","location":null,"status":"passed","title":"Should set the correct className when passing inline option"},{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331557769,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\CheckboxGroup\\CheckboxGroup.test.tsx","startTime":1569331555902,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> should correctly pass a custom className","location":null,"status":"passed","title":"should correctly pass a custom className"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classNames when placement is passed","location":null,"status":"passed","title":"Should set the correct classNames when placement is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classNames when position is passed","location":null,"status":"passed","title":"Should set the correct classNames when position is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classNames when autoHeight is passed","location":null,"status":"passed","title":"Should set the correct classNames when autoHeight is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classNames when background is passed","location":null,"status":"passed","title":"Should set the correct classNames when background is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331557881,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Navbar\\Navbar.test.tsx","startTime":1569331555990,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockTitle />"],"failureMessages":[],"fullName":"<BlockTitle /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockTitle />"],"failureMessages":[],"fullName":"<BlockTitle /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockTitle />"],"failureMessages":[],"fullName":"<BlockTitle /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331557935,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockTitle\\BlockTitle.test.tsx","startTime":1569331556073,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should correctly render `label`","location":null,"status":"passed","title":"Should correctly render `label`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should correctly render `checked state`","location":null,"status":"passed","title":"Should correctly render `checked state`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should correctly render `id`","location":null,"status":"passed","title":"Should correctly render `id`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should be able to render without `id`","location":null,"status":"passed","title":"Should be able to render without `id`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should call `onChange` when toggling checkbox","location":null,"status":"passed","title":"Should call `onChange` when toggling checkbox"}],"endTime":1569331558076,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Checkbox\\Checkbox.test.tsx","startTime":1569331556212,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when shrink is passed (string)","location":null,"status":"passed","title":"Should set the correct className when shrink is passed (string)"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331558146,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\FlexItem\\FlexItem.test.tsx","startTime":1569331556296,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should set the correct className when passed the `condensed`-prop","location":null,"status":"passed","title":"Should set the correct className when passed the `condensed`-prop"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331558230,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Box\\Box.test.tsx","startTime":1569331556390,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should set the correct className in wide mode","location":null,"status":"passed","title":"Should set the correct className in wide mode"},{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should correctly pass on `src` and `alt` to the <img>","location":null,"status":"passed","title":"Should correctly pass on `src` and `alt` to the <img>"}],"endTime":1569331558280,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Image\\Image.test.tsx","startTime":1569331556356,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should correctly set the wrapper `className`","location":null,"status":"passed","title":"Should correctly set the wrapper `className`"},{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should correctly set the wrapper `className` for the aspect ratios","location":null,"status":"passed","title":"Should correctly set the wrapper `className` for the aspect ratios"},{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should correctly pass on the supported iframe-props","location":null,"status":"passed","title":"Should correctly pass on the supported iframe-props"}],"endTime":1569331558323,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockIframe\\BlockIframe.test.tsx","startTime":1569331556432,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockImage />"],"failureMessages":[],"fullName":"<BlockImage /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockImage />"],"failureMessages":[],"fullName":"<BlockImage /> Should render the image correctly","location":null,"status":"passed","title":"Should render the image correctly"},{"ancestorTitles":["<BlockImage />"],"failureMessages":[],"fullName":"<BlockImage /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1569331558479,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ContentBlocks\\BlockImage\\BlockImage.test.tsx","startTime":1569331556552,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> should correctly pass a custom className","location":null,"status":"passed","title":"should correctly pass a custom className"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should correctly set the sizing className","location":null,"status":"passed","title":"Should correctly set the sizing className"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should correctly set multiple sizing clasnames","location":null,"status":"passed","title":"Should correctly set multiple sizing clasnames"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331559201,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Grid\\Column.test.tsx","startTime":1569331557198,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should set the correct className for every type","location":null,"status":"passed","title":"Should set the correct className for every type"},{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should render the text correctly","location":null,"status":"passed","title":"Should render the text correctly"}],"endTime":1569331559764,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Badge\\Badge.test.tsx","startTime":1569331557907,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should have 12 spinner bars","location":null,"status":"passed","title":"Should have 12 spinner bars"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should be able to render as a large spinner","location":null,"status":"passed","title":"Should be able to render as a large spinner"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should be able to render a light variant","location":null,"status":"passed","title":"Should be able to render a light variant"}],"endTime":1569331559791,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Spinner\\Spinner.test.tsx","startTime":1569331557966,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should set the correct default className and custom className","location":null,"status":"passed","title":"Should set the correct default className and custom className"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should set the correct className when selectable","location":null,"status":"passed","title":"Should set the correct className when selectable"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should set the correct styles for width and height","location":null,"status":"passed","title":"Should set the correct styles for width and height"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should pass selected item (single)","location":null,"status":"passed","title":"Should pass selected item (single)"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should pass first selected items (multi)","location":null,"status":"passed","title":"Should pass first selected items (multi)"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should pass second selected items (multi)","location":null,"status":"passed","title":"Should pass second selected items (multi)"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should correctly unselect items (multi)","location":null,"status":"passed","title":"Should correctly unselect items (multi)"}],"endTime":1569331559898,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\ImageGrid\\ImageGrid.test.tsx","startTime":1569331557814,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should set the correct type className","location":null,"status":"passed","title":"Should set the correct type className"},{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331559979,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Form\\Form.test.tsx","startTime":1569331558111,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should correctly render the initials","location":null,"status":"passed","title":"Should correctly render the initials"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should be able to render as a small avatar","location":null,"status":"passed","title":"Should be able to render as a small avatar"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should be able to render an image as the avatar","location":null,"status":"passed","title":"Should be able to render an image as the avatar"}],"endTime":1569331559992,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Avatar\\AvatarIcon.test.tsx","startTime":1569331558178,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ToolbarItem />"],"failureMessages":[],"fullName":"<ToolbarItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ToolbarItem />"],"failureMessages":[],"fullName":"<ToolbarItem /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<ToolbarItem />"],"failureMessages":[],"fullName":"<ToolbarItem /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331560019,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Toolbar\\ToolbarItem.test.tsx","startTime":1569331558254,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ToolbarTitle />"],"failureMessages":[],"fullName":"<ToolbarTitle /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ToolbarTitle />"],"failureMessages":[],"fullName":"<ToolbarTitle /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<ToolbarTitle />"],"failureMessages":[],"fullName":"<ToolbarTitle /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331560140,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Toolbar\\ToolbarTitle.test.tsx","startTime":1569331558306,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1569331560164,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Grid\\Grid.test.tsx","startTime":1569331558348,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ModalBackdrop />"],"failureMessages":[],"fullName":"<ModalBackdrop /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ModalBackdrop />"],"failureMessages":[],"fullName":"<ModalBackdrop /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<ModalBackdrop />"],"failureMessages":[],"fullName":"<ModalBackdrop /> Should set the correct className when `visible`","location":null,"status":"passed","title":"Should set the correct className when `visible`"}],"endTime":1569331560339,"message":"","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\Modal\\ModalBackdrop.test.tsx","startTime":1569331558524,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<DateTimePicker />"],"failureMessages":[],"fullName":"<DateTimePicker /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<DateTimePicker />"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toEqual (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.test.tsx:20:57)\n    at Object.asyncJestTest (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:102:37)\n    at resolve (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:26:19)\n    at promise.then (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"<DateTimePicker /> Should set the correct className","location":null,"status":"failed","title":"Should set the correct className"},{"ancestorTitles":["<DateTimePicker />"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"test\"\u001b[39m\nReceived: \u001b[31m\"test-time\"\u001b[39m\n    at Object.toEqual (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.test.tsx:31:44)\n    at Object.asyncJestTest (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:102:37)\n    at resolve (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:26:19)\n    at promise.then (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"<DateTimePicker /> Should pass on the id","location":null,"status":"failed","title":"Should pass on the id"},{"ancestorTitles":["<DateTimePicker />"],"failureMessages":["Error: Method “props” is meant to be run on 1 node. 0 found instead.\n    at ShallowWrapper.single (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme\\build\\ShallowWrapper.js:1958:17)\n    at ShallowWrapper.single [as props] (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme\\build\\ShallowWrapper.js:1225:21)\n    at ShallowWrapper.props [as prop] (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme\\build\\ShallowWrapper.js:1445:21)\n    at Object.prop (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.test.tsx:41:28)\n    at Object.asyncJestTest (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:102:37)\n    at resolve (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:26:19)\n    at promise.then (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"<DateTimePicker /> Should be able to set the disabled state","location":null,"status":"failed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<DateTimePicker />"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"2019-06-11\"\u001b[39m\nReceived: \u001b[31m\"02:00\"\u001b[39m\n    at Object.toEqual (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.test.tsx:54:47)\n    at Object.asyncJestTest (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:102:37)\n    at resolve (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:26:19)\n    at promise.then (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"<DateTimePicker /> Should be able to set an initial value","location":null,"status":"failed","title":"Should be able to set an initial value"},{"ancestorTitles":["<DateTimePicker />"],"failureMessages":["TypeError: Cannot read property 'value' of undefined\n    at value (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.tsx:88:79)\n    at handler (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme-adapter-react-16\\src\\ReactSixteenAdapter.js:657:13)\n    at fn (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme-adapter-utils\\src\\Utils.js:99:18)\n    at Object.simulateEvent (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme-adapter-react-16\\src\\ReactSixteenAdapter.js:653:11)\n    at ShallowWrapper.apply (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme\\build\\ShallowWrapper.js:1168:57)\n    at ShallowWrapper.call [as single] (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme\\build\\ShallowWrapper.js:1960:25)\n    at ShallowWrapper.single [as simulate] (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\enzyme\\build\\ShallowWrapper.js:1165:21)\n    at Object.simulate (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.test.tsx:67:25)\n    at Object.asyncJestTest (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:102:37)\n    at resolve (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:26:19)\n    at promise.then (C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"<DateTimePicker /> Should call the onChange handler when the input changes","location":null,"status":"failed","title":"Should call the onChange handler when the input changes"}],"endTime":1569331561131,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1m<DateTimePicker /> › Should set the correct className\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m\t\t\u001b[36mconst\u001b[39m \u001b[33mDateTimePickerElement\u001b[39m \u001b[33m=\u001b[39m \u001b[33mDateTimePickerComponent\u001b[39m\u001b[33m.\u001b[39mfind(\u001b[32m'input'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m\t\texpect(\u001b[33mDateTimePickerComponent\u001b[39m\u001b[33m.\u001b[39mhasClass(customClass))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m\t\t                                                      \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m\t\texpect(\u001b[33mDateTimePickerElement\u001b[39m\u001b[33m.\u001b[39mhasClass(\u001b[32m'c-input'\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m\t})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[2m\u001b[0m\u001b[36msrc/components/DateTimePicker/DateTimePicker.test.tsx\u001b[39m\u001b[0m\u001b[2m:20:57)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1m<DateTimePicker /> › Should pass on the id\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"test\"\u001b[39m\n    Received: \u001b[31m\"test-time\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m\t\t\u001b[36mconst\u001b[39m \u001b[33mDateTimePickerElement\u001b[39m \u001b[33m=\u001b[39m \u001b[33mDateTimePickerComponent\u001b[39m\u001b[33m.\u001b[39mfind(\u001b[32m'input'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 31 | \u001b[39m\t\texpect(\u001b[33mDateTimePickerElement\u001b[39m\u001b[33m.\u001b[39mprop(\u001b[32m'id'\u001b[39m))\u001b[33m.\u001b[39mtoEqual(id)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m\t\t                                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m\t})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m\tit(\u001b[32m'Should be able to set the disabled state'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[2m\u001b[0m\u001b[36msrc/components/DateTimePicker/DateTimePicker.test.tsx\u001b[39m\u001b[0m\u001b[2m:31:44)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1m<DateTimePicker /> › Should be able to set the disabled state\u001b[39m\u001b[22m\n\n    Method “props” is meant to be run on 1 node. 0 found instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m\t\texpect(\u001b[33mDatePickerElement\u001b[39m\u001b[33m.\u001b[39mprop(\u001b[32m'disabled'\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 41 | \u001b[39m\t\texpect(\u001b[33mTimePickerElement\u001b[39m\u001b[33m.\u001b[39mprop(\u001b[32m'disabled'\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m\t\t                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m\t})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 | \u001b[39m\tit(\u001b[32m'Should be able to set an initial value'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.single (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1958:17)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.single [as props] (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1225:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.props [as prop] (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1445:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.prop (\u001b[2m\u001b[0m\u001b[36msrc/components/DateTimePicker/DateTimePicker.test.tsx\u001b[39m\u001b[0m\u001b[2m:41:28)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1m<DateTimePicker /> › Should be able to set an initial value\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"2019-06-11\"\u001b[39m\n    Received: \u001b[31m\"02:00\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 | \u001b[39m\t\t\u001b[36mconst\u001b[39m \u001b[33mDateTimePickerElement\u001b[39m \u001b[33m=\u001b[39m \u001b[33mDateTimePickerComponent\u001b[39m\u001b[33m.\u001b[39mfind(\u001b[32m'input'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 54 | \u001b[39m\t\texpect(\u001b[33mDateTimePickerElement\u001b[39m\u001b[33m.\u001b[39mprop(\u001b[32m'value'\u001b[39m))\u001b[33m.\u001b[39mtoEqual(defaultDateString)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m\t\t                                            \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 | \u001b[39m\t})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 56 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 | \u001b[39m\tit(\u001b[32m'Should call the onChange handler when the input changes'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[2m\u001b[0m\u001b[36msrc/components/DateTimePicker/DateTimePicker.test.tsx\u001b[39m\u001b[0m\u001b[2m:54:47)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1m<DateTimePicker /> › Should call the onChange handler when the input changes\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'value' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 | \u001b[39m\t\t\t\tplaceholder\u001b[33m=\u001b[39m\u001b[32m\"hh:mm\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m\t\t\t\tdisabled\u001b[33m=\u001b[39m{disabled}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 88 | \u001b[39m\t\t\t\tonChange\u001b[33m=\u001b[39m{(evt\u001b[33m:\u001b[39m \u001b[33mFormEvent\u001b[39m\u001b[33m<\u001b[39m\u001b[33mHTMLInputElement\u001b[39m\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m setTime(evt\u001b[33m.\u001b[39mcurrentTarget\u001b[33m.\u001b[39mvalue)}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m\t\t\t\t                                                                          \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m\t\t\t\tonBlur\u001b[33m=\u001b[39m{() \u001b[33m=>\u001b[39m handleChange(\u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m time)}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 90 | \u001b[39m\t\t\t\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 91 | \u001b[39m\t\t\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mFlex\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat value (\u001b[2msrc/components/DateTimePicker/DateTimePicker.tsx\u001b[2m:88:79)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat handler (\u001b[2mnode_modules/enzyme-adapter-react-16/src/ReactSixteenAdapter.js\u001b[2m:657:13)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[2mnode_modules/enzyme-adapter-utils/src/Utils.js\u001b[2m:99:18)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.simulateEvent (\u001b[2mnode_modules/enzyme-adapter-react-16/src/ReactSixteenAdapter.js\u001b[2m:653:11)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.apply (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1168:57)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.call [as single] (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1960:25)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.single [as simulate] (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1165:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.simulate (\u001b[2m\u001b[0m\u001b[36msrc/components/DateTimePicker/DateTimePicker.test.tsx\u001b[39m\u001b[0m\u001b[2m:67:25)\u001b[2m\u001b[22m\n","name":"C:\\Users\\bert\\Documents\\studiohyperdrive\\repos\\avo2-components\\src\\components\\DateTimePicker\\DateTimePicker.test.tsx","startTime":1569331557472,"status":"failed","summary":""}],"wasInterrupted":false}