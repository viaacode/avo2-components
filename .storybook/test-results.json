{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":79,"numPassedTests":498,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":79,"numTotalTests":498,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1576831289818,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["<BlockHeading />"],"failureMessages":[],"fullName":"<BlockHeading /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockHeading />"],"failureMessages":[],"fullName":"<BlockHeading /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["<BlockHeading />"],"failureMessages":[],"fullName":"<BlockHeading /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831295246,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/content-blocks/BlockHeading/BlockHeading.test.tsx","startTime":1576831292131,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<VideoWrapper>"],"failureMessages":[],"fullName":"<VideoWrapper> should be able to render","location":null,"status":"passed","title":"should be able to render"},{"ancestorTitles":["<VideoWrapper>"],"failureMessages":[],"fullName":"<VideoWrapper> should set the correct className","location":null,"status":"passed","title":"should set the correct className"},{"ancestorTitles":["<VideoWrapper>"],"failureMessages":[],"fullName":"<VideoWrapper> should set the correct className for the aspect ratio","location":null,"status":"passed","title":"should set the correct className for the aspect ratio"}],"endTime":1576831295283,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/VideoWrapper/VideoWrapper.test.tsx","startTime":1576831292112,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockRichText />"],"failureMessages":[],"fullName":"<BlockRichText /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockRichText />"],"failureMessages":[],"fullName":"<BlockRichText /> Should render the markdown correctly","location":null,"status":"passed","title":"Should render the markdown correctly"},{"ancestorTitles":["<BlockRichText />"],"failureMessages":[],"fullName":"<BlockRichText /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<BlockRichText />"],"failureMessages":[],"fullName":"<BlockRichText /> Should create multiple columns","location":null,"status":"passed","title":"Should create multiple columns"}],"endTime":1576831295357,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/content-blocks/BlockRichText/BlockRichText.test.tsx","startTime":1576831291896,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<CTA />"],"failureMessages":[],"fullName":"<CTA /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<CTA />"],"failureMessages":[],"fullName":"<CTA /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831295954,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/CTA/CTA.test.tsx","startTime":1576831292040,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should set the correct className for every size","location":null,"status":"passed","title":"Should set the correct className for every size"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should set the correct className for scrollable modals","location":null,"status":"passed","title":"Should set the correct className for scrollable modals"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render with a title","location":null,"status":"passed","title":"Should be able to render with a title"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render without a title","location":null,"status":"passed","title":"Should be able to render without a title"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to be rendered invisible","location":null,"status":"passed","title":"Should be able to be rendered invisible"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to be rendered visible ","location":null,"status":"passed","title":"Should be able to be rendered visible "},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not show the backdrop when invisible","location":null,"status":"passed","title":"Should not show the backdrop when invisible"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should show the backdrop when visible","location":null,"status":"passed","title":"Should show the backdrop when visible"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should call the onClose handler when closing the modal","location":null,"status":"passed","title":"Should call the onClose handler when closing the modal"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not call `onClose` when clicking inside the modal ","location":null,"status":"passed","title":"Should not call `onClose` when clicking inside the modal "},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should correctly render the body","location":null,"status":"passed","title":"Should correctly render the body"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render items in the header (right)","location":null,"status":"passed","title":"Should be able to render items in the header (right)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render items in the footer (left)","location":null,"status":"passed","title":"Should be able to render items in the footer (left)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should be able to render items in the footer (right)","location":null,"status":"passed","title":"Should be able to render items in the footer (right)"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not render the footer when no footer render props are passed","location":null,"status":"passed","title":"Should not render the footer when no footer render props are passed"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not render the left side of the footer when no ModalFooterLeft-slot is passed","location":null,"status":"passed","title":"Should not render the left side of the footer when no ModalFooterLeft-slot is passed"},{"ancestorTitles":["<Modal />"],"failureMessages":[],"fullName":"<Modal /> Should not render the right side of the footer when no ModalFooterRight-slot is passed","location":null,"status":"passed","title":"Should not render the right side of the footer when no ModalFooterRight-slot is passed"}],"endTime":1576831296193,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Modal/Modal.test.tsx","startTime":1576831292050,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render the correct number of menu items","location":null,"status":"passed","title":"Should render the correct number of menu items"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> should render children when given","location":null,"status":"passed","title":"should render children when given"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render icons if provided","location":null,"status":"passed","title":"Should render icons if provided"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render with search results","location":null,"status":"passed","title":"Should render with search results"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render no results label if provided","location":null,"status":"passed","title":"Should render no results label if provided"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render the correct number of dividers","location":null,"status":"passed","title":"Should render the correct number of dividers"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should render using custom render function","location":null,"status":"passed","title":"Should render using custom render function"},{"ancestorTitles":["<MenuItem />"],"failureMessages":[],"fullName":"<MenuItem /> Should call onClick when item is clicked","location":null,"status":"passed","title":"Should call onClick when item is clicked"}],"endTime":1576831296321,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Menu/Menu.test.tsx","startTime":1576831292060,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className for `variant`-prop","location":null,"status":"passed","title":"Should set the correct className for `variant`-prop"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should be able to render the table head from `columns`","location":null,"status":"passed","title":"Should be able to render the table head from `columns`"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should render a chevron based on `sortColumn` & `sortOrder` when a column is sortable","location":null,"status":"passed","title":"Should render a chevron based on `sortColumn` & `sortOrder` when a column is sortable"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should set the correct className for a th when col is given","location":null,"status":"passed","title":"Should set the correct className for a th when col is given"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not try to render table head when no `columns` are passed","location":null,"status":"passed","title":"Should not try to render table head when no `columns` are passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should be able to render the table body from `data`","location":null,"status":"passed","title":"Should be able to render the table body from `data`"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not try to render table body when no `data` is passed","location":null,"status":"passed","title":"Should not try to render table body when no `data` is passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should accept a custom `renderCell`-prop for cell-rendering","location":null,"status":"passed","title":"Should accept a custom `renderCell`-prop for cell-rendering"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should correctly set the rowKey for each row","location":null,"status":"passed","title":"Should correctly set the rowKey for each row"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should call `onColumnClick` when a sortable column is clicked","location":null,"status":"passed","title":"Should call `onColumnClick` when a sortable column is clicked"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not call `onColumnClick` when a non-sortable column is clicked","location":null,"status":"passed","title":"Should not call `onColumnClick` when a non-sortable column is clicked"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should render an `emptyStateMessage` when no data is passed","location":null,"status":"passed","title":"Should render an `emptyStateMessage` when no data is passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not render an `emptyStateMessage` when data is passed","location":null,"status":"passed","title":"Should not render an `emptyStateMessage` when data is passed"},{"ancestorTitles":["<Table />"],"failureMessages":[],"fullName":"<Table /> Should not render an `emptyStateMessage` when it was not passed","location":null,"status":"passed","title":"Should not render an `emptyStateMessage` when it was not passed"}],"endTime":1576831296376,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Table/Table.test.tsx","startTime":1576831292088,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should render correctly with `isOpen = false`","location":null,"status":"passed","title":"Should render correctly with `isOpen = false`"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Shouldrender correctly with `isOpen = true`","location":null,"status":"passed","title":"Shouldrender correctly with `isOpen = true`"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should call `onOpen` when clicking the button (and `isOpen = false`)","location":null,"status":"passed","title":"Should call `onOpen` when clicking the button (and `isOpen = false`)"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should call `onClose` when clicking the button (and `isOpen = true`)","location":null,"status":"passed","title":"Should call `onClose` when clicking the button (and `isOpen = true`)"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should set the correct className for button","location":null,"status":"passed","title":"Should set the correct className for button"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should correctly pass `label`","location":null,"status":"passed","title":"Should correctly pass `label`"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should correctly render slots","location":null,"status":"passed","title":"Should correctly render slots"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should correctly pass triggerWidth","location":null,"status":"passed","title":"Should correctly pass triggerWidth"},{"ancestorTitles":["<Dropdown />"],"failureMessages":[],"fullName":"<Dropdown /> Should correctly pass menuWidth","location":null,"status":"passed","title":"Should correctly pass menuWidth"}],"endTime":1576831296616,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Dropdown/Dropdown.test.tsx","startTime":1576831292082,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should be able to set a placeholder value","location":null,"status":"passed","title":"Should be able to set a placeholder value"},{"ancestorTitles":["<DatePicker />"],"failureMessages":[],"fullName":"<DatePicker /> Should call the onChange handler when the input changes","location":null,"status":"passed","title":"Should call the onChange handler when the input changes"}],"endTime":1576831297415,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/DatePicker/DatePicker.test.tsx","startTime":1576831292046,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should call the onChange handler when the input changes","location":null,"status":"passed","title":"Should call the onChange handler when the input changes"}],"endTime":1576831298026,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/TagsInput/TagsInput.test.tsx","startTime":1576831295401,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render Thumbnail component","location":null,"status":"passed","title":"Should render Thumbnail component"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render a SearchResultTitle-slot","location":null,"status":"passed","title":"Should be able to render a SearchResultTitle-slot"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render a SearchResultSubtitle-slot","location":null,"status":"passed","title":"Should be able to render a SearchResultSubtitle-slot"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should be able to render a SearchResultThumbnail-slot","location":null,"status":"passed","title":"Should be able to render a SearchResultThumbnail-slot"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should call `onToggle` when clicking bookmark","location":null,"status":"passed","title":"Should call `onToggle` when clicking bookmark"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `type` correctly","location":null,"status":"passed","title":"Should render `type` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `date` correctly","location":null,"status":"passed","title":"Should render `date` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `viewCount` correctly","location":null,"status":"passed","title":"Should render `viewCount` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `bookmarkCount` correctly","location":null,"status":"passed","title":"Should render `bookmarkCount` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `description` correctly","location":null,"status":"passed","title":"Should render `description` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `duration` correctly","location":null,"status":"passed","title":"Should render `duration` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `numberOfItems` correctly","location":null,"status":"passed","title":"Should render `numberOfItems` correctly"},{"ancestorTitles":["<SearchResult />"],"failureMessages":[],"fullName":"<SearchResult /> Should render `tags` correctly","location":null,"status":"passed","title":"Should render `tags` correctly"}],"endTime":1576831298191,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/SearchResult/SearchResult.test.tsx","startTime":1576831292004,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ButtonGroup />"],"failureMessages":[],"fullName":"<ButtonGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ButtonGroup />"],"failureMessages":[],"fullName":"<ButtonGroup /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831298216,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ButtonGroup/ButtonGroup.test.tsx","startTime":1576831296355,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockVideo />"],"failureMessages":[],"fullName":"<BlockVideo /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockVideo />"],"failureMessages":[],"fullName":"<BlockVideo /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831298361,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockVideo/BlockVideo.test.tsx","startTime":1576831295982,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should render the image correctly","location":null,"status":"passed","title":"Should render the image correctly"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should render the text correctly","location":null,"status":"passed","title":"Should render the text correctly"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<BlockImageTitleTextButton />"],"failureMessages":[],"fullName":"<BlockImageTitleTextButton /> Should trigger handler when button is clicked","location":null,"status":"passed","title":"Should trigger handler when button is clicked"}],"endTime":1576831298478,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockImageTitleTextButton/BlockImageTitleTextButton.test.tsx","startTime":1576831296244,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<HeaderContentType />"],"failureMessages":[],"fullName":"<HeaderContentType /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<HeaderContentType />"],"failureMessages":[],"fullName":"<HeaderContentType /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"}],"endTime":1576831298575,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/HeaderContentType/HeaderContentType.test.tsx","startTime":1576831296650,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the title link correctly","location":null,"status":"passed","title":"Should render the title link correctly"},{"ancestorTitles":["<BlockVideoTitleTextButton />"],"failureMessages":[],"fullName":"<BlockVideoTitleTextButton /> Should render the text correctly","location":null,"status":"passed","title":"Should render the text correctly"}],"endTime":1576831298687,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockVideoTitleTextButton/BlockVideoTitleTextButton.test.tsx","startTime":1576831295316,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should correctly render the given options","location":null,"status":"passed","title":"Should correctly render the given options"},{"ancestorTitles":["<Select />"],"failureMessages":[],"fullName":"<Select /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"}],"endTime":1576831298734,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Select/Select.test.tsx","startTime":1576831296408,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should only show 3 visible avatars if more are given","location":null,"status":"passed","title":"should only show 3 visible avatars if more are given"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should show a button with the amount of hidden avatars if more than 3 are given","location":null,"status":"passed","title":"should show a button with the amount of hidden avatars if more than 3 are given"},{"ancestorTitles":["AvatarList"],"failureMessages":[],"fullName":"AvatarList should show the hidden avatars when isOpen prop equals true","location":null,"status":"passed","title":"should show the hidden avatars when isOpen prop equals true"}],"endTime":1576831299091,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/AvatarList/AvatarList.test.tsx","startTime":1576831295291,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the placeholder value","location":null,"status":"passed","title":"Should be able to set the placeholder value"}],"endTime":1576831299215,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/FileInput/FileInput.test.tsx","startTime":1576831297707,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should correctly render `label`","location":null,"status":"passed","title":"Should correctly render `label`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should correctly render `checked state`","location":null,"status":"passed","title":"Should correctly render `checked state`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should correctly render `id`","location":null,"status":"passed","title":"Should correctly render `id`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should be able to render without `id`","location":null,"status":"passed","title":"Should be able to render without `id`"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<Checkbox />"],"failureMessages":[],"fullName":"<Checkbox /> Should call `onChange` when toggling checkbox","location":null,"status":"passed","title":"Should call `onChange` when toggling checkbox"}],"endTime":1576831299271,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Checkbox/Checkbox.test.tsx","startTime":1576831298442,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should render the thumbnail slot correctly","location":null,"status":"passed","title":"Should render the thumbnail slot correctly"},{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should render the text slot correctly","location":null,"status":"passed","title":"Should render the text slot correctly"},{"ancestorTitles":["<BlockTitleImageText />"],"failureMessages":[],"fullName":"<BlockTitleImageText /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831299271,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockTitleImageText/BlockTitleImageText.test.tsx","startTime":1576831298251,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should display the tooltip trigger","location":null,"status":"passed","title":"should display the tooltip trigger"},{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should set the correct placement className","location":null,"status":"passed","title":"should set the correct placement className"},{"ancestorTitles":["Tooltip"],"failureMessages":[],"fullName":"Tooltip should show the tooltip when hovered","location":null,"status":"passed","title":"should show the tooltip when hovered"}],"endTime":1576831299528,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Tooltip/Tooltip.test.tsx","startTime":1576831298267,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when orientation is passed","location":null,"status":"passed","title":"Should set the correct className when orientation is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when center is passed","location":null,"status":"passed","title":"Should set the correct className when center is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when orientation and center are passed","location":null,"status":"passed","title":"Should set the correct className when orientation and center are passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when justify is passed","location":null,"status":"passed","title":"Should set the correct className when justify is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when wrap is passed","location":null,"status":"passed","title":"Should set the correct className when wrap is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when spaced is passed (boolean)","location":null,"status":"passed","title":"Should set the correct className when spaced is passed (boolean)"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when spaced is passed (wide)","location":null,"status":"passed","title":"Should set the correct className when spaced is passed (wide)"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when no spaced is passed","location":null,"status":"passed","title":"Should set the correct className when no spaced is passed"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831299569,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Flex/Flex.test.tsx","startTime":1576831298719,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the placeholder value","location":null,"status":"passed","title":"Should be able to set the placeholder value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set the type value","location":null,"status":"passed","title":"Should be able to set the type value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should be able to render with an icon","location":null,"status":"passed","title":"Should be able to render with an icon"},{"ancestorTitles":["<TextInput />"],"failureMessages":[],"fullName":"<TextInput /> Should call the onChange handler when the input changes","location":null,"status":"passed","title":"Should call the onChange handler when the input changes"}],"endTime":1576831299641,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/TextInput/TextInput.test.tsx","startTime":1576831298507,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should correctly render the initials","location":null,"status":"passed","title":"Should correctly render the initials"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should be able to render as a small avatar","location":null,"status":"passed","title":"Should be able to render as a small avatar"},{"ancestorTitles":["<AvatarIcon />"],"failureMessages":[],"fullName":"<AvatarIcon /> Should be able to render an image as the avatar","location":null,"status":"passed","title":"Should be able to render an image as the avatar"}],"endTime":1576831299652,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Avatar/AvatarIcon/AvatarIcon.test.tsx","startTime":1576831298091,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should correctly render the labels","location":null,"status":"passed","title":"Should correctly render the labels"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render with swatches","location":null,"status":"passed","title":"Should be able to render with swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render without swatches","location":null,"status":"passed","title":"Should be able to render without swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should set the correct className for labels when rendering with swatches","location":null,"status":"passed","title":"Should set the correct className for labels when rendering with swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should set the correct className for labels when rendering without swatches","location":null,"status":"passed","title":"Should set the correct className for labels when rendering without swatches"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should not render a <p class=\"c-label-text\"> nor <p class=\"c-tag__label\"> when tag has no swatches & is not closable","location":null,"status":"passed","title":"Should not render a <p class=\"c-label-text\"> nor <p class=\"c-tag__label\"> when tag has no swatches & is not closable"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render with borders","location":null,"status":"passed","title":"Should be able to render with borders"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render without borders","location":null,"status":"passed","title":"Should be able to render without borders"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should be able to render close buttons","location":null,"status":"passed","title":"Should be able to render close buttons"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should call `onTagClosed` when closing a tag","location":null,"status":"passed","title":"Should call `onTagClosed` when closing a tag"},{"ancestorTitles":["<TagList />"],"failureMessages":[],"fullName":"<TagList /> Should call `onTagClicked` when clicking a tag","location":null,"status":"passed","title":"Should call `onTagClicked` when clicking a tag"}],"endTime":1576831299801,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/TagList/TagList.test.tsx","startTime":1576831298606,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should set the correct className for each category","location":null,"status":"passed","title":"Should set the correct className for each category"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should set the correct className for each orientation","location":null,"status":"passed","title":"Should set the correct className for each orientation"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should render thumbnail when slot is passed","location":null,"status":"passed","title":"Should render thumbnail when slot is passed"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should render metaData when slot is passed","location":null,"status":"passed","title":"Should render metaData when slot is passed"},{"ancestorTitles":["<MediaCard />"],"failureMessages":[],"fullName":"<MediaCard /> Should pass `href` property to title & thumbnail","location":null,"status":"passed","title":"Should pass `href` property to title & thumbnail"}],"endTime":1576831299871,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/MediaCard/MediaCard.test.tsx","startTime":1576831298767,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should show the correct message","location":null,"status":"passed","title":"should show the correct message"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should show an icon depending on the type option","location":null,"status":"passed","title":"should show an icon depending on the type option"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should set the correct className when setting option dark = true","location":null,"status":"passed","title":"should set the correct className when setting option dark = true"},{"ancestorTitles":["<Alert />"],"failureMessages":[],"fullName":"<Alert /> should show a spinner when the correct type is passed","location":null,"status":"passed","title":"should show a spinner when the correct type is passed"}],"endTime":1576831300148,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Alert/Alert.test.tsx","startTime":1576831299231,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should set the correct default className and custom className","location":null,"status":"passed","title":"Should set the correct default className and custom className"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should set the correct className when selectable","location":null,"status":"passed","title":"Should set the correct className when selectable"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should set the correct styles for width and height","location":null,"status":"passed","title":"Should set the correct styles for width and height"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should pass selected item (single)","location":null,"status":"passed","title":"Should pass selected item (single)"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should pass first selected items (multi)","location":null,"status":"passed","title":"Should pass first selected items (multi)"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should pass second selected items (multi)","location":null,"status":"passed","title":"Should pass second selected items (multi)"},{"ancestorTitles":["<ImageGrid />"],"failureMessages":[],"fullName":"<ImageGrid /> Should correctly unselect items (multi)","location":null,"status":"passed","title":"Should correctly unselect items (multi)"}],"endTime":1576831300174,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ImageGrid/ImageGrid.test.tsx","startTime":1576831299580,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should correctly set the wrapper `className`","location":null,"status":"passed","title":"Should correctly set the wrapper `className`"},{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should correctly set the wrapper `className` for the aspect ratios","location":null,"status":"passed","title":"Should correctly set the wrapper `className` for the aspect ratios"},{"ancestorTitles":["<BlockIframe />"],"failureMessages":[],"fullName":"<BlockIframe /> Should correctly pass on the supported iframe-props","location":null,"status":"passed","title":"Should correctly pass on the supported iframe-props"}],"endTime":1576831300248,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockIframe/BlockIframe.test.tsx","startTime":1576831299663,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> should correctly pass a custom className","location":null,"status":"passed","title":"should correctly pass a custom className"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set aria label","location":null,"status":"passed","title":"Should set aria label"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set title tooltip","location":null,"status":"passed","title":"Should set title tooltip"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set the normal version of the icon when not `active`","location":null,"status":"passed","title":"Should set the normal version of the icon when not `active`"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should set the filled version of the icon when `active`","location":null,"status":"passed","title":"Should set the filled version of the icon when `active`"},{"ancestorTitles":["<ToggleButton ariaLabel=\"test button\" />"],"failureMessages":[],"fullName":"<ToggleButton ariaLabel=\"test button\" /> Should call the `onClick`-handler when clicked","location":null,"status":"passed","title":"Should call the `onClick`-handler when clicked"}],"endTime":1576831300248,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ToggleButton/ToggleButton.test.tsx","startTime":1576831299283,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<FlowPlayer />"],"failureMessages":[],"fullName":"<FlowPlayer /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<FlowPlayer />"],"failureMessages":[],"fullName":"<FlowPlayer /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<FlowPlayer />"],"failureMessages":[],"fullName":"<FlowPlayer /> Should not render cut-overlay when end is not passed","location":null,"status":"passed","title":"Should not render cut-overlay when end is not passed"},{"ancestorTitles":["<FlowPlayer />"],"failureMessages":[],"fullName":"<FlowPlayer /> Should render cut-overlay when start and end are passed","location":null,"status":"passed","title":"Should render cut-overlay when start and end are passed"}],"endTime":1576831300269,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/FlowPlayer/FlowPlayer.test.tsx","startTime":1576831299123,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<KeyValueEditor />"],"failureMessages":[],"fullName":"<KeyValueEditor /> Should be able to render with data array","location":null,"status":"passed","title":"Should be able to render with data array"},{"ancestorTitles":["<KeyValueEditor />"],"failureMessages":[],"fullName":"<KeyValueEditor /> Should be able to render with data object","location":null,"status":"passed","title":"Should be able to render with data object"},{"ancestorTitles":["<KeyValueEditor />"],"failureMessages":[],"fullName":"<KeyValueEditor /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<KeyValueEditor />"],"failureMessages":[],"fullName":"<KeyValueEditor /> Should be able to set the readonly state","location":null,"status":"passed","title":"Should be able to set the readonly state"},{"ancestorTitles":["<KeyValueEditor />"],"failureMessages":[],"fullName":"<KeyValueEditor /> Should call the onChange handler when an input triggers an onBlur event","location":null,"status":"passed","title":"Should call the onChange handler when an input triggers an onBlur event"}],"endTime":1576831300340,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/KeyValueEditor/KeyValueEditor.test.tsx","startTime":1576831299289,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render with id correctly set","location":null,"status":"passed","title":"Should be able to render with id correctly set"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render with name correctly set","location":null,"status":"passed","title":"Should be able to render with name correctly set"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render with label correctly set","location":null,"status":"passed","title":"Should be able to render with label correctly set"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should be able to render without an id","location":null,"status":"passed","title":"Should be able to render without an id"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should set the defaultChecked-prop as the initial state","location":null,"status":"passed","title":"Should set the defaultChecked-prop as the initial state"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should have a default value of false for the checked-state","location":null,"status":"passed","title":"Should have a default value of false for the checked-state"},{"ancestorTitles":["<RadioButton />"],"failureMessages":[],"fullName":"<RadioButton /> Should call `onChange` when toggling radio button","location":null,"status":"passed","title":"Should call `onChange` when toggling radio button"}],"endTime":1576831300520,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/RadioButton/RadioButton.test.tsx","startTime":1576831299886,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> should set the large class when setting size to large","location":null,"status":"passed","title":"should set the large class when setting size to large"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> should use an icon when no initials or name are passed","location":null,"status":"passed","title":"should use an icon when no initials or name are passed"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly render the name","location":null,"status":"passed","title":"Should correctly render the name"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly render the title","location":null,"status":"passed","title":"Should correctly render the title"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly render a combination of the name & title","location":null,"status":"passed","title":"Should correctly render a combination of the name & title"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should render only the icon when no name or title was passed","location":null,"status":"passed","title":"Should render only the icon when no name or title was passed"},{"ancestorTitles":["<Avatar />"],"failureMessages":[],"fullName":"<Avatar /> Should correctly pass the necessary props to <AvatarIcon />","location":null,"status":"passed","title":"Should correctly pass the necessary props to <AvatarIcon />"}],"endTime":1576831300611,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Avatar/Avatar.test.tsx","startTime":1576831299545,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render pages equal to the `displayCount`","location":null,"status":"passed","title":"Should render pages equal to the `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render pages equal to the `pageCount` if it is less than the `displayCount`","location":null,"status":"passed","title":"Should render pages equal to the `pageCount` if it is less than the `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the current page in an active state","location":null,"status":"passed","title":"Should render the current page in an active state"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should correctly set the `currentPage`","location":null,"status":"passed","title":"Should correctly set the `currentPage`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render pages padded around the current page based on the `displayCount`","location":null,"status":"passed","title":"Should render pages padded around the current page based on the `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the first x pages when the current page is lower than the (odd) `displayCount`","location":null,"status":"passed","title":"Should render the first x pages when the current page is lower than the (odd) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the first x pages when the current page is lower than the (even) `displayCount`","location":null,"status":"passed","title":"Should render the first x pages when the current page is lower than the (even) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (odd) `displayCount`","location":null,"status":"passed","title":"Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (odd) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (even) `displayCount`","location":null,"status":"passed","title":"Should render the last x pages when if the currentPage is equal less than the `pageCount` minus the (even) `displayCount`"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should call `onPageChange` when changing pages internally","location":null,"status":"passed","title":"Should call `onPageChange` when changing pages internally"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should not call `onPageChange` when changing page to the current page","location":null,"status":"passed","title":"Should not call `onPageChange` when changing page to the current page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the previous page","location":null,"status":"passed","title":"Should be able to jump to the previous page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the next page","location":null,"status":"passed","title":"Should be able to jump to the next page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the first page","location":null,"status":"passed","title":"Should be able to jump to the first page"},{"ancestorTitles":["<Pagination />"],"failureMessages":[],"fullName":"<Pagination /> Should be able to jump to the last page","location":null,"status":"passed","title":"Should be able to jump to the last page"}],"endTime":1576831300651,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Pagination/Pagination.test.tsx","startTime":1576831299653,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should set the correct className when icon is passed","location":null,"status":"passed","title":"Should set the correct className when icon is passed"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should set the correct className when passing `active`","location":null,"status":"passed","title":"Should set the correct className when passing `active`"},{"ancestorTitles":["<Tab />"],"failureMessages":[],"fullName":"<Tab /> Should render `label` correctly","location":null,"status":"passed","title":"Should render `label` correctly"}],"endTime":1576831300778,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Tabs/Tab/Tab.test.tsx","startTime":1576831299812,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should render a label when it is passed","location":null,"status":"passed","title":"Should render a label when it is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should not render a label when none is passed","location":null,"status":"passed","title":"Should not render a label when none is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should set className and render an error when it is passed","location":null,"status":"passed","title":"Should set className and render an error when it is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should set className and render multiple errors when they are passed","location":null,"status":"passed","title":"Should set className and render multiple errors when they are passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should add correct inlineMode class","location":null,"status":"passed","title":"Should add correct inlineMode class"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should not set className and not render an error when none is passed","location":null,"status":"passed","title":"Should not set className and not render an error when none is passed"},{"ancestorTitles":["<FormGroup />"],"failureMessages":[],"fullName":"<FormGroup /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831300876,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Form/FormGroup/FormGroup.test.tsx","startTime":1576831300158,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for size","location":null,"status":"passed","title":"Should set the correct className for size"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for spaced","location":null,"status":"passed","title":"Should set the correct className for spaced"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for justify","location":null,"status":"passed","title":"Should set the correct className for justify"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for autoHeight","location":null,"status":"passed","title":"Should set the correct className for autoHeight"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should set the correct className for alignTop","location":null,"status":"passed","title":"Should set the correct className for alignTop"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should correctly render the left controls","location":null,"status":"passed","title":"Should correctly render the left controls"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should correctly render the center controls","location":null,"status":"passed","title":"Should correctly render the center controls"},{"ancestorTitles":["<Toolbar />"],"failureMessages":[],"fullName":"<Toolbar /> Should correctly render the right controls","location":null,"status":"passed","title":"Should correctly render the right controls"}],"endTime":1576831301130,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Toolbar/Toolbar.test.tsx","startTime":1576831300352,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<MultiRange />"],"failureMessages":[],"fullName":"<MultiRange /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"}],"endTime":1576831301155,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/MultiRange/MultiRange.test.tsx","startTime":1576831300261,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render when a known icon is passed","location":null,"status":"passed","title":"Should render when a known icon is passed"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render slash icon when an unknown icon name is passed","location":null,"status":"passed","title":"Should render slash icon when an unknown icon name is passed"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should render icon when name was passed as kebab-case","location":null,"status":"passed","title":"Should render icon when name was passed as kebab-case"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly pass a custom className","location":null,"status":"passed","title":"Should correctly pass a custom className"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the className without type","location":null,"status":"passed","title":"Should correctly set the className without type"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the className with type","location":null,"status":"passed","title":"Should correctly set the className with type"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the subtle class when the subtle option is true","location":null,"status":"passed","title":"Should correctly set the subtle class when the subtle option is true"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the sizing className","location":null,"status":"passed","title":"Should correctly set the sizing className"},{"ancestorTitles":["<Icon />"],"failureMessages":[],"fullName":"<Icon /> Should correctly set the className when active","location":null,"status":"passed","title":"Should correctly set the className when active"}],"endTime":1576831301330,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Icon/Icon.test.tsx","startTime":1576831300186,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `id`","location":null,"status":"passed","title":"Should correctly pass on `id`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `data`","location":null,"status":"passed","title":"Should correctly pass on `data`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `placeholder`","location":null,"status":"passed","title":"Should correctly pass on `placeholder`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `lang`","location":null,"status":"passed","title":"Should correctly pass on `lang`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `buttons`","location":null,"status":"passed","title":"Should correctly pass on `buttons`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `semantic`","location":null,"status":"passed","title":"Should correctly pass on `semantic`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `resetCss`","location":null,"status":"passed","title":"Should correctly pass on `resetCss`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `autogrow`","location":null,"status":"passed","title":"Should correctly pass on `autogrow`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `disabled`","location":null,"status":"passed","title":"Should correctly pass on `disabled`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `removeformatPasted`","location":null,"status":"passed","title":"Should correctly pass on `removeformatPasted`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `shouldUseSvgIcons`","location":null,"status":"passed","title":"Should correctly pass on `shouldUseSvgIcons`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `shouldInjectSvgIcons`","location":null,"status":"passed","title":"Should correctly pass on `shouldInjectSvgIcons`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `svgIconsPath`","location":null,"status":"passed","title":"Should correctly pass on `svgIconsPath`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `btnsDef`","location":null,"status":"passed","title":"Should correctly pass on `btnsDef`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `plugins`","location":null,"status":"passed","title":"Should correctly pass on `plugins`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onFocus`","location":null,"status":"passed","title":"Should correctly pass on `onFocus`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly trigger `onBlur`","location":null,"status":"passed","title":"Should correctly trigger `onBlur`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onInit`","location":null,"status":"passed","title":"Should correctly pass on `onInit`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onResize`","location":null,"status":"passed","title":"Should correctly pass on `onResize`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onPaste`","location":null,"status":"passed","title":"Should correctly pass on `onPaste`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onOpenFullScreen`","location":null,"status":"passed","title":"Should correctly pass on `onOpenFullScreen`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onCloseFullScreen`","location":null,"status":"passed","title":"Should correctly pass on `onCloseFullScreen`"},{"ancestorTitles":["<WYSIWYG />"],"failureMessages":[],"fullName":"<WYSIWYG /> Should correctly pass on `onClose`","location":null,"status":"passed","title":"Should correctly pass on `onClose`"}],"endTime":1576831301337,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/WYSIWYG/WYSIWYG.test.tsx","startTime":1576831300540,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct collapsed height","location":null,"status":"passed","title":"Should set the correct collapsed height"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should render with custom expand/collapse labels","location":null,"status":"passed","title":"Should render with custom expand/collapse labels"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should render expanded state if defaultExpanded is true","location":null,"status":"passed","title":"Should render expanded state if defaultExpanded is true"}],"endTime":1576831301365,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ExpandableContainer/ExpandableContainer.test.tsx","startTime":1576831300265,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct aria label","location":null,"status":"passed","title":"Should set the correct aria label"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct size className","location":null,"status":"passed","title":"Should set the correct size className"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct width className when passing block option","location":null,"status":"passed","title":"Should set the correct width className when passing block option"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct type className","location":null,"status":"passed","title":"Should set the correct type className"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct className when passing autoHeight option","location":null,"status":"passed","title":"Should set the correct className when passing autoHeight option"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render a label","location":null,"status":"passed","title":"Should be able to render a label"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should not to render a label when none is passed","location":null,"status":"passed","title":"Should not to render a label when none is passed"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render a label and an icon","location":null,"status":"passed","title":"Should be able to render a label and an icon"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should get a special className when only an icon is passed","location":null,"status":"passed","title":"Should get a special className when only an icon is passed"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should be able to render an arrow at the end of the button","location":null,"status":"passed","title":"Should be able to render an arrow at the end of the button"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should call the `onClick`-handler when clicked","location":null,"status":"passed","title":"Should call the `onClick`-handler when clicked"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should pass on the `disabled`-attribute","location":null,"status":"passed","title":"Should pass on the `disabled`-attribute"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should set the correct classnames when `active` is passed","location":null,"status":"passed","title":"Should set the correct classnames when `active` is passed"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should pass on the title attribute","location":null,"status":"passed","title":"Should pass on the title attribute"},{"ancestorTitles":["<Button />"],"failureMessages":[],"fullName":"<Button /> Should pass on the `active`-prop to the button icon","location":null,"status":"passed","title":"Should pass on the `active`-prop to the button icon"}],"endTime":1576831301560,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Button/Button.test.tsx","startTime":1576831300298,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should render the quote text correctly","location":null,"status":"passed","title":"Should render the quote text correctly"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should render the avatar correctly","location":null,"status":"passed","title":"Should render the avatar correctly"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should render the author name correctly","location":null,"status":"passed","title":"Should render the author name correctly"},{"ancestorTitles":["<BlockQuote />"],"failureMessages":[],"fullName":"<BlockQuote /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831301656,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockQuote/BlockQuote.test.tsx","startTime":1576831300790,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should set the correct className for each category","location":null,"status":"passed","title":"Should set the correct className for each category"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should render image if src is correctly passed","location":null,"status":"passed","title":"Should render image if src is correctly passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should render placeholder if no src is passed","location":null,"status":"passed","title":"Should render placeholder if no src is passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should correctly set alt if it was passed","location":null,"status":"passed","title":"Should correctly set alt if it was passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should render meta if it was passed","location":null,"status":"passed","title":"Should render meta if it was passed"},{"ancestorTitles":["<Thumbnail />"],"failureMessages":[],"fullName":"<Thumbnail /> Should not render meta if it was not passed","location":null,"status":"passed","title":"Should not render meta if it was not passed"}],"endTime":1576831301698,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Thumbnail/Thumbnail.test.tsx","startTime":1576831300665,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className with each category","location":null,"status":"passed","title":"Should set the correct className with each category"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className when spaced is passed","location":null,"status":"passed","title":"Should set the correct className when spaced is passed"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831301785,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/MetaData/MetaData.test.tsx","startTime":1576831300623,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockLinks />"],"failureMessages":[],"fullName":"<BlockLinks /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockLinks />"],"failureMessages":[],"fullName":"<BlockLinks /> Should render the links correctly","location":null,"status":"passed","title":"Should render the links correctly"},{"ancestorTitles":["<BlockLinks />"],"failureMessages":[],"fullName":"<BlockLinks /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831301839,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockLinks/BlockLinks.test.tsx","startTime":1576831301150,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classnames when in horizontal mode","location":null,"status":"passed","title":"Should set the correct classnames when in horizontal mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct custom classnames","location":null,"status":"passed","title":"Should set the correct custom classnames"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classnames when passing `size` and no mode is passed","location":null,"status":"passed","title":"Should set the correct classnames when passing `size` and no mode is passed"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classnames when passing `size` in horizontal mode","location":null,"status":"passed","title":"Should set the correct classnames when passing `size` in horizontal mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classnames when in vertical mode","location":null,"status":"passed","title":"Should set the correct classnames when in vertical mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should set the correct classnames when passing `size` in vertical mode","location":null,"status":"passed","title":"Should set the correct classnames when passing `size` in vertical mode"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to have an `alt` background","location":null,"status":"passed","title":"Should be able to have an `alt` background"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to have an `inverse` background","location":null,"status":"passed","title":"Should be able to have an `inverse` background"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should be able to be rendered with a bottom border","location":null,"status":"passed","title":"Should be able to be rendered with a bottom border"},{"ancestorTitles":["<Container />"],"failureMessages":[],"fullName":"<Container /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831301878,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Container/Container.test.tsx","startTime":1576831301168,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should set the correct className when border is passed","location":null,"status":"passed","title":"Should set the correct className when border is passed"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should correctly render `Tab`-components as children","location":null,"status":"passed","title":"Should correctly render `Tab`-components as children"},{"ancestorTitles":["<Tabs />"],"failureMessages":[],"fullName":"<Tabs /> Should trigger onClick when clicking a tab","location":null,"status":"passed","title":"Should trigger onClick when clicking a tab"}],"endTime":1576831302023,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Tabs/Tabs.test.tsx","startTime":1576831300903,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should set the correct inline className","location":null,"status":"passed","title":"Should set the correct inline className"},{"ancestorTitles":["<RadioButtonGroup />"],"failureMessages":[],"fullName":"<RadioButtonGroup /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831302107,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/RadioButtonGroup/RadioButtonGroup.test.tsx","startTime":1576831301349,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["useDeselectEvent"],"failureMessages":[],"fullName":"useDeselectEvent Should call `onDeselect` when selecting a radio button with the same `name` and a different `value`","location":null,"status":"passed","title":"Should call `onDeselect` when selecting a radio button with the same `name` and a different `value`"},{"ancestorTitles":["useDeselectEvent"],"failureMessages":[],"fullName":"useDeselectEvent Should not call `onDeselect` when selecting the current radio button","location":null,"status":"passed","title":"Should not call `onDeselect` when selecting the current radio button"},{"ancestorTitles":["useDeselectEvent"],"failureMessages":[],"fullName":"useDeselectEvent Should not call `onDeselect` when selecting a radio button with a different `name`","location":null,"status":"passed","title":"Should not call `onDeselect` when selecting a radio button with a different `name`"}],"endTime":1576831302334,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/hooks/useDeselectEvent.test.tsx","startTime":1576831301365,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should set the correct className in wide mode","location":null,"status":"passed","title":"Should set the correct className in wide mode"},{"ancestorTitles":["<Image />"],"failureMessages":[],"fullName":"<Image /> Should correctly pass on `src` and `alt` to the <img>","location":null,"status":"passed","title":"Should correctly pass on `src` and `alt` to the <img>"}],"endTime":1576831302384,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Image/Image.test.tsx","startTime":1576831301709,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> should correctly pass a custom className","location":null,"status":"passed","title":"should correctly pass a custom className"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classnames when placement is passed","location":null,"status":"passed","title":"Should set the correct classnames when placement is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classnames when position is passed","location":null,"status":"passed","title":"Should set the correct classnames when position is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classnames when autoHeight is passed","location":null,"status":"passed","title":"Should set the correct classnames when autoHeight is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should set the correct classnames when background is passed","location":null,"status":"passed","title":"Should set the correct classnames when background is passed"},{"ancestorTitles":["<Navbar />"],"failureMessages":[],"fullName":"<Navbar /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831302417,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Navbar/Navbar.test.tsx","startTime":1576831301667,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Panel />"],"failureMessages":[],"fullName":"<Panel /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Panel />"],"failureMessages":[],"fullName":"<Panel /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<Panel />"],"failureMessages":[],"fullName":"<Panel /> Should correctly render the panel header","location":null,"status":"passed","title":"Should correctly render the panel header"},{"ancestorTitles":["<Panel />"],"failureMessages":[],"fullName":"<Panel /> Should correctly render the panel body","location":null,"status":"passed","title":"Should correctly render the panel body"}],"endTime":1576831302716,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Panel/Panel.test.tsx","startTime":1576831301795,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should set the correct className when in spacious mode","location":null,"status":"passed","title":"Should set the correct className when in spacious mode"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should render the title correctly","location":null,"status":"passed","title":"Should render the title correctly"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should render the body correctly","location":null,"status":"passed","title":"Should render the body correctly"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should be able to render an icon","location":null,"status":"passed","title":"Should be able to render an icon"},{"ancestorTitles":["<Blankslate />"],"failureMessages":[],"fullName":"<Blankslate /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831302746,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Blankslate/Blankslate.test.tsx","startTime":1576831301431,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Accordion />"],"failureMessages":[],"fullName":"<Accordion /> should render","location":null,"status":"passed","title":"should render"},{"ancestorTitles":["<Accordion />"],"failureMessages":[],"fullName":"<Accordion /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Accordion />"],"failureMessages":[],"fullName":"<Accordion /> Should render correctly with `isOpen = false`","location":null,"status":"passed","title":"Should render correctly with `isOpen = false`"},{"ancestorTitles":["<Accordion />"],"failureMessages":[],"fullName":"<Accordion /> Should call the `onToggle` prop when clicking the header","location":null,"status":"passed","title":"Should call the `onToggle` prop when clicking the header"},{"ancestorTitles":["<Accordion />"],"failureMessages":[],"fullName":"<Accordion /> Should render with slots","location":null,"status":"passed","title":"Should render with slots"}],"endTime":1576831302773,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Accordion/Accordion.test.tsx","startTime":1576831301574,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should pass on the id","location":null,"status":"passed","title":"Should pass on the id"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should pass on the name","location":null,"status":"passed","title":"Should pass on the name"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set the placeholder value","location":null,"status":"passed","title":"Should be able to set the placeholder value"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set an initial value","location":null,"status":"passed","title":"Should be able to set an initial value"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should be able to set the rows for the textarea","location":null,"status":"passed","title":"Should be able to set the rows for the textarea"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should set the correct classnames for the `height`-prop","location":null,"status":"passed","title":"Should set the correct classnames for the `height`-prop"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should set the correct classnames for the `width`-prop","location":null,"status":"passed","title":"Should set the correct classnames for the `width`-prop"},{"ancestorTitles":["<TextArea />"],"failureMessages":[],"fullName":"<TextArea /> Should call the onChange handler when the textArea changes","location":null,"status":"passed","title":"Should call the onChange handler when the textArea changes"}],"endTime":1576831302807,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/TextArea/TextArea.test.tsx","startTime":1576831302037,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockImage />"],"failureMessages":[],"fullName":"<BlockImage /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockImage />"],"failureMessages":[],"fullName":"<BlockImage /> Should render the image correctly","location":null,"status":"passed","title":"Should render the image correctly"},{"ancestorTitles":["<BlockImage />"],"failureMessages":[],"fullName":"<BlockImage /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831302865,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ContentBlocks/BlockImage/BlockImage.test.tsx","startTime":1576831301968,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"},{"ancestorTitles":["<Grid />"],"failureMessages":[],"fullName":"<Grid /> Should render with a custom tag","location":null,"status":"passed","title":"Should render with a custom tag"}],"endTime":1576831303041,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Grid/Grid.test.tsx","startTime":1576831302356,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should set the correct className for every type","location":null,"status":"passed","title":"Should set the correct className for every type"},{"ancestorTitles":["<Badge />"],"failureMessages":[],"fullName":"<Badge /> Should render the text correctly","location":null,"status":"passed","title":"Should render the text correctly"}],"endTime":1576831303079,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Badge/Badge.test.tsx","startTime":1576831302405,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<MetaDataItem />"],"failureMessages":[],"fullName":"<MetaDataItem /> Should set the correct className when icon is passed","location":null,"status":"passed","title":"Should set the correct className when icon is passed"}],"endTime":1576831303117,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/MetaData/MetaDataItem/MetaDataItem.test.tsx","startTime":1576831301905,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should call onPressDown when pressing target key","location":null,"status":"passed","title":"Should call onPressDown when pressing target key"},{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should call onPressUp when releasing target key","location":null,"status":"passed","title":"Should call onPressUp when releasing target key"},{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should not call onPressDown when pressing a key that is not the target key","location":null,"status":"passed","title":"Should not call onPressDown when pressing a key that is not the target key"},{"ancestorTitles":["useKeyPress"],"failureMessages":[],"fullName":"useKeyPress Should not call onPressUp when releasing a key that is not the target key","location":null,"status":"passed","title":"Should not call onPressUp when releasing a key that is not the target key"}],"endTime":1576831303272,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/hooks/useKeypress.test.tsx","startTime":1576831302449,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ButtonToolbar />"],"failureMessages":[],"fullName":"<ButtonToolbar /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ButtonToolbar />"],"failureMessages":[],"fullName":"<ButtonToolbar /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831303313,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/ButtonToolbar/ButtonToolbar.test.tsx","startTime":1576831302147,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<PanelHeader />"],"failureMessages":[],"fullName":"<PanelHeader /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<PanelHeader />"],"failureMessages":[],"fullName":"<PanelHeader /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<PanelHeader />"],"failureMessages":[],"fullName":"<PanelHeader /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303394,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Panel/PanelHeader/PanelHeader.test.tsx","startTime":1576831302760,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should set the correct type className","location":null,"status":"passed","title":"Should set the correct type className"},{"ancestorTitles":["<Form />"],"failureMessages":[],"fullName":"<Form /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303399,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Form/Form.test.tsx","startTime":1576831302733,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should set the correct className when shrink is passed (string)","location":null,"status":"passed","title":"Should set the correct className when shrink is passed (string)"},{"ancestorTitles":["<Flex />"],"failureMessages":[],"fullName":"<Flex /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303517,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Flex/FlexItem/FlexItem.test.tsx","startTime":1576831302890,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should correctly set the className","location":null,"status":"passed","title":"Should correctly set the className"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should have 12 spinner bars","location":null,"status":"passed","title":"Should have 12 spinner bars"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should be able to render as a large spinner","location":null,"status":"passed","title":"Should be able to render as a large spinner"},{"ancestorTitles":["<Spinner />"],"failureMessages":[],"fullName":"<Spinner /> Should be able to render a light variant","location":null,"status":"passed","title":"Should be able to render a light variant"}],"endTime":1576831303574,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Spinner/Spinner.test.tsx","startTime":1576831302822,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className when margin is passed (string)","location":null,"status":"passed","title":"Should set the correct className when margin is passed (string)"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className when margin is passed (array)","location":null,"status":"passed","title":"Should set the correct className when margin is passed (array)"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should set the correct className when multiple margins are passed","location":null,"status":"passed","title":"Should set the correct className when multiple margins are passed"},{"ancestorTitles":["<Spacer />"],"failureMessages":[],"fullName":"<Spacer /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303668,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Spacer/Spacer.test.tsx","startTime":1576831303054,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should correctly render `checked state`","location":null,"status":"passed","title":"Should correctly render `checked state`"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should correctly render `id`","location":null,"status":"passed","title":"Should correctly render `id`"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should be able to render without `id`","location":null,"status":"passed","title":"Should be able to render without `id`"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should be able to set the disabled state","location":null,"status":"passed","title":"Should be able to set the disabled state"},{"ancestorTitles":["<Toggle />"],"failureMessages":[],"fullName":"<Toggle /> Should call `onChange` when toggling toggle","location":null,"status":"passed","title":"Should call `onChange` when toggling toggle"}],"endTime":1576831303693,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Toggle/Toggle.test.tsx","startTime":1576831302842,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should set the correct className when passing inline option","location":null,"status":"passed","title":"Should set the correct className when passing inline option"},{"ancestorTitles":["<CheckboxGroup />"],"failureMessages":[],"fullName":"<CheckboxGroup /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303736,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/CheckboxGroup/CheckboxGroup.test.tsx","startTime":1576831303145,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> should correctly pass a custom className","location":null,"status":"passed","title":"should correctly pass a custom className"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should correctly set the sizing className","location":null,"status":"passed","title":"Should correctly set the sizing className"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should correctly set multiple sizing clasnames","location":null,"status":"passed","title":"Should correctly set multiple sizing clasnames"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"},{"ancestorTitles":["<Column />"],"failureMessages":[],"fullName":"<Column /> Should render with a custom tag","location":null,"status":"passed","title":"Should render with a custom tag"}],"endTime":1576831303755,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Grid/Column/Column.test.tsx","startTime":1576831303133,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<PanelBody />"],"failureMessages":[],"fullName":"<PanelBody /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<PanelBody />"],"failureMessages":[],"fullName":"<PanelBody /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<PanelBody />"],"failureMessages":[],"fullName":"<PanelBody /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303786,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Panel/PanelBody/PanelBody.test.tsx","startTime":1576831303282,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ModalBackdrop />"],"failureMessages":[],"fullName":"<ModalBackdrop /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ModalBackdrop />"],"failureMessages":[],"fullName":"<ModalBackdrop /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<ModalBackdrop />"],"failureMessages":[],"fullName":"<ModalBackdrop /> Should set the correct className when `visible`","location":null,"status":"passed","title":"Should set the correct className when `visible`"}],"endTime":1576831303799,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Modal/ModalBackdrop.test.tsx","startTime":1576831303326,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ToolbarItem />"],"failureMessages":[],"fullName":"<ToolbarItem /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ToolbarItem />"],"failureMessages":[],"fullName":"<ToolbarItem /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<ToolbarItem />"],"failureMessages":[],"fullName":"<ToolbarItem /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303836,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Toolbar/ToolbarItem/ToolbarItem.test.tsx","startTime":1576831303405,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<ToolbarTitle />"],"failureMessages":[],"fullName":"<ToolbarTitle /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<ToolbarTitle />"],"failureMessages":[],"fullName":"<ToolbarTitle /> Should set the correct className(s)","location":null,"status":"passed","title":"Should set the correct className(s)"},{"ancestorTitles":["<ToolbarTitle />"],"failureMessages":[],"fullName":"<ToolbarTitle /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303916,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Toolbar/ToolbarTitle/ToolbarTitle.test.tsx","startTime":1576831303532,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should set the correct className when passed the `condensed`-prop","location":null,"status":"passed","title":"Should set the correct className when passed the `condensed`-prop"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should set the correct className when passed the `backgroundColor`-prop","location":null,"status":"passed","title":"Should set the correct className when passed the `backgroundColor`-prop"},{"ancestorTitles":["<Box />"],"failureMessages":[],"fullName":"<Box /> Should correctly pass children","location":null,"status":"passed","title":"Should correctly pass children"}],"endTime":1576831303944,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Box/Box.test.tsx","startTime":1576831303424,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<BlockIntro />"],"failureMessages":[],"fullName":"<BlockIntro /> Should set the correct className","location":null,"status":"passed","title":"Should set the correct className"}],"endTime":1576831304746,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/content-blocks/BlockIntro/BlockIntro.test.tsx","startTime":1576831292060,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["<Header />"],"failureMessages":[],"fullName":"<Header /> Should be able to render","location":null,"status":"passed","title":"Should be able to render"},{"ancestorTitles":["<Header />"],"failureMessages":[],"fullName":"<Header /> should pass a custom className","location":null,"status":"passed","title":"should pass a custom className"}],"endTime":1576831307087,"message":"","name":"/Users/benjaminnaesen/Dev/avo2-components/src/components/Header/Header.test.tsx","startTime":1576831303585,"status":"passed","summary":""}],"wasInterrupted":false}